#@(#) Makefile started by makeout(1) 2019-12-16 08:27:04
# generated by:   ...

NULL=
PROGFILES = \
 ../example/adjustc.f90  \
 ../example/base.f90  \
 ../example/change.f90  \
 ../example/chomp.f90  \
 ../example/codebase.f90  \
 ../example/compact.f90  \
 ../example/crop.f90  \
 ../example/decodebase.f90  \
 ../example/delim.f90  \
 ../example/describe.f90  \
 ../example/expand.f90  \
 ../example/fmt.f90  \
 ../example/getvals.f90  \
 ../example/indent.f90  \
 ../example/isalnum.f90  \
 ../example/isalpha.f90  \
 ../example/isascii.f90  \
 ../example/isblank.f90  \
 ../example/iscntrl.f90  \
 ../example/isdigit.f90  \
 ../example/isgraph.f90  \
 ../example/islower.f90  \
 ../example/isnumber.f90  \
 ../example/isprint.f90  \
 ../example/ispunct.f90  \
 ../example/isspace.f90  \
 ../example/isupper.f90  \
 ../example/isxdigit.f90  \
 ../example/join.f90  \
 ../example/len_white.f90  \
 ../example/lenset.f90  \
 ../example/listout.f90  \
 ../example/lower.f90  \
 ../example/matchw.f90  \
 ../example/merge_str.f90  \
 ../example/modif.f90  \
 ../example/msg.f90  \
 ../example/noesc.f90  \
 ../example/nospace.f90  \
 ../example/notabs.f90  \
 ../example/quote.f90  \
 ../example/replace.f90  \
 ../example/reverse.f90  \
 ../example/rotate13.f90  \
 ../example/s2c.f90  \
 ../example/s2v.f90  \
 ../example/s2vs.f90  \
 ../example/split.f90  \
 ../example/stretch.f90  \
 ../example/string_to_value.f90  \
 ../example/string_to_values.f90  \
 ../example/strtok.f90  \
 ../example/substitute.f90  \
 ../example/switch.f90  \
 ../example/transliterate.f90  \
 ../example/unquote.f90  \
 ../example/upper.f90  \
 ../example/upper_quoted.f90  \
 ../example/v2s.f90  \
 ../example/value_to_string.f90  \
 ../example/visible.f90  \
 ../example/M_strings.f90  \
$(NULL)

TESTFILES = \
 ../test/test_suite_M_strings.f90 \
 ../test/M_strings_oops.f90 \
$(NULL)
TEST = ${TESTFILES:.f90=}

CPROGFILES = 

PROG = ${PROGFILES:.f90=}

CPROG = ${CPROGFILES:.c=}

SRCS =  M_journal.f90 M_strings.f90 M_strings_oop.f90 

OBJS =  M_journal.o M_strings.o M_strings_oop.o 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# platform-specific values you will probably change
# 
LIBS := 
CC := cc
CFLAGS := -O
FC := gfortran
FFLAGS := -O
LDFLAGS := 
# 
# You can either ignore it, or disable the "may be used uninitialized"
# warnings with -Wno-maybe-uninitialized or compile with optimizations
# (-O1 and more).
gfortran: F90=gfortran
gfortran: F90FLAGS := -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized
gfortran: all
	@echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
	@echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
	@echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
	@echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
all: $(PROG) $(CPROG)
	rm -f M_journal.f90
	@echo "That's all folks!"
$(PROG): $(OBJS)

	-$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS) # && ./$@ </dev/null

M_journal.f90: ../aux/M_journal.f90
	cp ../aux/M_journal.f90 .
.PHONY: clean
clean:
	rm -f $(PROG) $(CPROG) $(OBJS) *.mod $(TEST) M_journal.f90

.PHONY: help

help:
	: make    '-- build M_strings M_strings_oop module'
	: run     '-- run manpage demo programs and test program'
	: test    '-- run test program (requires additional modules)'
	: man     '-- show all manpages as text'
	: ship    '-- rebuild archive files of manpages'
	: clean   '-- clean directory of object files and executables'
	: doxygen '-- run doxygen(1) if you have it'
	: help    '-- display this text'

.PHONY: ship
ship:
	: make easily distributed archive files of manpages
	mkdir -p ../docs
	cd ../man/man3;\
	   gzip *.3m_strings;\
	   zip -r ../../docs/manpages.zip *gz;\
	   tar cvfz ../../docs/manpages.tgz *gz;\
	   gunzip *.3m_strings.gz

.PHONY: run
run: $(PROG)
	# run everything
	echo $? | xargs -n 1  
#	echo $? | xargs -n 1  |xargs -iXX /bin/time XX  \</dev/null
	echo $? | xargs -n 1  |(set +x;xargs -iXX env XX 2>&1)

.PHONY: test
test: $(OBJS)
	# compile and load
	$(F90) $(LDFLAGS) $(TESTFILES) -o ${TESTFILES:.f90=} $(OBJS) $(LIBS)
	# run 
	${TESTFILES:.f90=}

.PHONY: doxygen
doxygen: 
	doxygen dox.in

.PHONY: man
man:
	@mandb ../man 1>&2
	@env MANPATH=../man MANWIDTH=256 man -k .|col -b
	@env MANPATH=../man MANWIDTH=80  man --regex '.*'|col -b

.SUFFIXES: $(SUFFIXES) .f90 .F90

.f90.o:
	$(F90) $(F90FLAGS) -c $<

.F90.o:
	$(F90) $(F90FLAGS) -c $<

M_strings.o: M_journal.o
M_strings_oop.o: M_strings.o
