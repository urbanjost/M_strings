." Text automatically generated by txt2man
.TH "expand" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBexpand\fP(3f) - [M_strings:NONALPHA] expand C-like escape sequences
(LICENSE:PD)

.SH SYNOPSIS
function \fBexpand\fP(line,escape) \fBresult\fP(\fIlineout\fP)
.PP
.nf
.fam C
   character(len=*)                      :: line
   character(len=1),intent(in),optional  :: escape
   character(len=:),allocatable          :: lineout

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBEXPAND\fP() expands sequences used to represent commonly used escape
sequences or control characters. By default \.\.\.
.PP
Escape sequences
.RS
.TP
.B \\
backslash
.TP
.B a
alert (BEL) -- g is an alias for a
.TP
.B b
backspace
.TP
.B c
suppress further output
.TP
.B e
escape
.TP
.B f
form feed
.TP
.B n
new line
.TP
.B r
carriage return
.TP
.B t
horizontal tab
.TP
.B v
vertical tab
.TP
.B oNNN
byte with octal value NNN (3 digits)
.TP
.B dNNN
byte with decimal value NNN (3 digits)
.TP
.B xHH
byte with hexadecimal value HH (2 digits) -- h is an alias for x
.RE
.PP
The default escape character is the backslash, but this may be
changed using the optional parameter ESCAPE.
.SH EXAMPLES
Sample Program:
.PP
.nf
.fam C
    program demo_expand
    !  test filter to expand escape sequences in input lines
    use M_strings, only : expand
    character(len=1024) :: line
    integer             :: ios
       READFILE: block
          do
             read(*,'(A)',iostat=ios)line
             if(ios /= 0) exit READFILE
             write(*,'(a)')trim(expand(line))
          enddo
       endblock READFILE
    end program demo_expand

.fam T
.fi
Sample input:
.PP
.nf
.fam C
     \\e[2J
     \\tABC\\tabc
     \\tA\\a
     \\nONE\\nTWO\\nTHREE

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
