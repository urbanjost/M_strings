." Text automatically generated by txt2man
.TH "base" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBbase\fP(3f) - [M_strings:BASE] convert whole number string in base [2-36]
to string in alternate base [2-36]
(LICENSE:PD)

.SH SYNOPSIS
logical function \fBbase\fP(x,b,y,a)
.PP
.nf
.fam C
   character(len=*),intent(in)  :: x
   character(len=*),intent(out) :: y
   integer,intent(in)           :: b,a
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION

Convert a numeric string from base B to base A. The function returns
FALSE if B is not in the range [2..36] or if string X contains invalid
characters in base B or if result Y is too big
.PP
The letters A,B,\.\.\.,Z represent 10,11,...,36 in the base > 10.
.SH OPTIONS
.TP
.B x
input string representing numeric whole value
.TP
.B b
assumed base of input string
.TP
.B y
output string
.TP
.B a
base specified for output string
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_base
   use M_strings, only : base
   implicit none
   integer           :: ba,bd
   character(len=40) :: x,y

   print *,' BASE CONVERSION'
   write(*,'("Start   Base (2 to 36): ")',advance='no'); read *, bd
   write(*,'("Arrival Base (2 to 36): ")',advance='no'); read *, ba
   INFINITE: do
      write(*,'("Enter number in start base (0 to quit): ")',advance='no')
      read *, x
      if(x.eq.'0') exit INFINITE
      if(base(x,bd,y,ba))then
           write(*,'("In base ",I2,": ",A20)')  ba, y
       else
         print *,'Error in decoding/encoding number.'
       endif
    enddo INFINITE

    end program demo_base

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
