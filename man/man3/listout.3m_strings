." Text automatically generated by txt2man
.TH "listout" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBlistout\fP(3f) - [M_strings:NUMERIC] expand a list of numbers where negative
numbers denote range ends (1 \fB-10\fP means 1 thru 10)
(LICENSE:PD)

.SH SYNOPSIS
subroutine \fBlistout\fP(icurve_lists,icurve_expanded,inums,ierr)
.PP
.nf
.fam C
   integer,intent(in)    :: icurve_lists(:)
   integer,intent(out)   :: icurve_expanded(:)
   integer,intent(out)   :: inums
   integer,intent(out)   :: ierr

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
expand a list of whole numbers where negative numbers indicate a range.
So [10,\fB-20\fP] would be expanded to [10,11,12,13,14,15,16,17,18,19,20].
.SH OPTIONS
.TP
.B \fBicurve_lists\fP(:)
input array
.SH RETURNS
.TP
.B \fBicurve_expanded\fP(:)
output array; assumed large enough to hold
returned list
.TP
.B inums
number of icurve_expanded numbers on output
.TP
.B ierr
zero if no error occurred
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_listout
    use M_strings, only : listout
    implicit none
    integer,allocatable :: icurve_lists(:)
    integer :: icurve_expanded(1000)
    ! icurve_lists is input array
    integer :: inums
    ! icurve_expanded is output array
    integer :: i
    ! number of icurve_lists values on input,
    ! number of icurve_expanded numbers on output
    integer :: ierr
       icurve_lists=[1, 20, -30, 101, 100, 99, 100, -120, 222, -200]
       inums=size(icurve_lists)
       call listout(icurve_lists,icurve_expanded,inums,ierr)
       if(ierr.eq.0)then
          write(*,'(i0)')(icurve_expanded(i),i=1,inums)
       else
          write(*,'(a,i0)')'error occurred in *listout* ',ierr
          write(*,'(i0)')(icurve_expanded(i),i=1,inums)
       endif
    end program demo_listout

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
