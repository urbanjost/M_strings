." Text automatically generated by txt2man
.TH "crop" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBcrop\fP(3f) - [M_strings:WHITESPACE] trim leading and trailing blanks and control characters from a string
(LICENSE:PD)

.SH SYNOPSIS
function \fBcrop\fP(\fIstrin\fP) result (\fIstrout\fP)
.PP
.nf
.fam C
    character(len=*),intent(in)  :: strin
    character(len=:),allocatable :: strout

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
All control characters throughout the string are replaced with spaces
and leading and trailing spaces are trimmed from the resulting string.
Tabs are expanded assuming a stop every eight characters.
.RE
.PP

.SH OPTIONS
.TP
.B \fIstrin\fP
input string to trim leading and trailing space and control
characters
from
.SH RETURNS
.TP
.B \fIstrout\fP
cropped version of input string
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_crop
   use M_strings, only: crop
   implicit none
   character(len=20) ::  untrimmed = '   ABCDEFG abcdefg  '
      write(*,*) 'untrimmed string=[',untrimmed,']'
      write(*,*) 'cropped string=[',crop(untrimmed),']'
   end program demo_crop

.fam T
.fi
Expected output
.PP
.nf
.fam C
     untrimmed string=[   ABCDEFG abcdefg                      ]
     cropped string=[ABCDEFG abcdefg]

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
