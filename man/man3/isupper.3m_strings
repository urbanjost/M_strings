." Text automatically generated by txt2man
.TH "isupper" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBisupper\fP(3f) - [M_strings:COMPARE] returns .true. if character is an
uppercase letter (A-Z)
(LICENSE:PD)

.SH SYNOPSIS

\fBelemental\fP \fIfunction\fP \fBisupper\fP(onechar)
.PP
.nf
.fam C
    character,intent(in) :: onechar
    logical              :: isupper

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBisupper\fP(3f) returns .true. if character is an uppercase letter (A-Z)
.SH OPTIONS
.TP
.B onechar
character to test
.SH RETURNS
.TP
.B isupper
logical value returns true if character is an uppercase
ASCII character else false.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_isupper
    use M_strings, only : isupper
    implicit none
    integer                    :: i
    character(len=1),parameter :: string(*)=[(char(i),i=0,127)]
       write(*,'(10(g0,1x))')'ISUPPER: ', &
       & iachar(pack( string, isupper(string) ))
       write(*,'(10(g0,1x))')'ISUPPER: ', &
       & pack( string, isupper(string) )
    end program demo_isupper

.fam T
.fi
Results:
.PP
.nf
.fam C
   ISUPPER:  65 66 67 68 69 70 71 72 73
   74 75 76 77 78 79 80 81 82 83
   84 85 86 87 88 89 90
   ISUPPER:  A B C D E F G H I
.fam T
.fi
.SS   J K L M N O P Q R S
.SS   T U V W X Y Z

.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
