." Text automatically generated by txt2man
.TH "compact" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBcompact\fP(3f) - [M_strings:WHITESPACE] converts contiguous whitespace
to a single character (or nothing)
(LICENSE:PD)

.SH SYNOPSIS
function \fBcompact\fP(STR,CHAR) result (\fIOUTSTR\fP)
.PP
.nf
.fam C
    character(len=*),intent(in)          :: STR
    character(len=*),intent(in),optional :: CHAR
    character(len=len(str))              :: OUTSTR

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBCOMPACT\fP(3f) converts multiple spaces, tabs and control characters
(called "whitespace") to a single character or nothing. Leading
whitespace is removed.
.SH OPTIONS
.TP
.B STR
input string to reduce or remove whitespace from
.TP
.B CHAR
By default the character that replaces adjacent
whitespace is a space. If the optional CHAR parameter is supplied
it will be used to replace the whitespace. If a null character is
supplied for CHAR whitespace is removed.
.SH RETURNS
.TP
.B \fIOUTSTR\fP
string of same length as input string but with all contiguous
whitespace reduced to a single space and leading whitespace
removed
.SH EXAMPLES
Sample Program:
.PP
.nf
.fam C
   program demo_compact
    use M_strings, only : compact
    implicit none
    ! produces 'This is a test               '
    write(*,*)compact('  This     is      a     test  ')
    ! produces 'Thisisatest                  '
    write(*,*)compact('  This     is      a     test  ',char='')
    ! produces 'This:is:a:test               '
    write(*,*)compact('  This     is      a     test  ',char=':')
    ! note CHAR is used to replace the whitespace, but if CHAR is
    ! in the original string it is just copied
    write(*,*)compact('A  AA    A   AAAAA',char='A')
    ! produces (original A characters are left as-is) 'AAAAAAAAAAAA'
    ! not 'A'
   end program demo_compact

   Expected output

.nf
.fam C
    >This is a test
    >Thisisatest
    >This:is:a:test
    >AAAAAAAAAAAA

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
