." Text automatically generated by txt2man
.TH "upper" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBupper\fP(3f) - [M_strings:CASE] changes a string to uppercase
(LICENSE:PD)

.SH SYNOPSIS
elemental pure function \fBupper\fP(str,begin,end) result (\fIstring\fP)
.PP
.nf
.fam C
    character(*), intent(in)    :: str
    integer,optional,intent(in) :: begin,end
    character(len(str))         :: string  ! output string

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBupper\fP(\fIstring\fP) returns a copy of the input \fIstring\fP with all characters
converted in the optionally specified range to uppercase, assuming
ASCII character sets are being used. If no range is specified the
entire \fIstring\fP is converted to uppercase.
.SH OPTIONS
.TP
.B str
\fIstring\fP to convert to uppercase
.TP
.B begin
optional starting position in "str" to begin converting to
uppercase
.TP
.B end
optional ending position in "str" to stop converting to
uppercase
.SH RESULTS
.TP
.B upper
copy of the input \fIstring\fP with all characters converted to
uppercase over optionally specified range.
.SH TRIVIA
The terms "uppercase" and "lowercase" date back to the early days of
the mechanical printing press. Individual metal alloy casts of each
needed letter, or punctuation symbol, were meticulously added to a
press block, by hand, before rolling out copies of a page. These
metal casts were stored and organized in wooden cases. The more
often needed miniscule letters were placed closer to hand, in the
lower cases of the work bench. The less often needed, capitalized,
majuscule letters, ended up in the harder to reach upper cases.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_upper
    use M_strings, only: upper
    implicit none
    character(len=:),allocatable  :: s
       s=' ABCDEFG abcdefg '
       write(*,*) 'mixed-case input string is \.\.\..',s
       write(*,*) 'upper-case output string is \.\.\.',upper(s)
       write(*,*) 'make first character uppercase  \.\.\. ',&
       & upper('this is a sentence.',1,1)
       write(*,'(1x,a,*(a:,"+"))') 'UPPER(3f) is elemental ==>',&
       & upper(["abc","def","ghi"])
    end program demo_upper

.fam T
.fi
Expected output
.PP
.nf
.fam C
    mixed-case input string is \.\.\.. ABCDEFG abcdefg
    upper-case output string is \.\.\. ABCDEFG ABCDEFG
    make first character uppercase  \.\.\. This is a sentence.
    UPPER(3f) is elemental ==>ABC+DEF+GHI

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
