." Text automatically generated by txt2man
.TH "strtok" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBstrtok\fP(3f) - [M_strings:TOKENS] Tokenize a string
(LICENSE:PD)

.SH SYNOPSIS
function \fBstrtok\fP(source_string,itoken,token_start,token_end,delimiters)
\fBresult\fP(\fIstrtok_status\fP)
.PP
.nf
.fam C
  ! returned value
  logical                      :: strtok_status
  ! string to tokenize
  character(len=*),intent(in)  :: source_string
  ! token count since started
  integer,intent(inout)        :: itoken
  ! beginning of token
  integer,intent(out)          :: token_start
  ! end of token
  integer,intent(inout)        :: token_end
  ! list of separator characters
  character(len=*),intent(in)  :: delimiters

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
The \fBSTRTOK\fP(3f) function is used to isolate sequential tokens in a
string, SOURCE_STRING. These tokens are delimited in the string by
at least one of the characters in DELIMITERS. The first time that
\fBSTRTOK\fP(3f) is called, ITOKEN should be specified as zero. Subsequent
calls, wishing to obtain further tokens from the same string,
.TP
.B should pass back in TOKEN_END
and ITOKEN until the function result
returns .false.
.PP
This routine assumes no other calls are made to it using any other
input string while it is processing an input line.
.SH OPTIONS
.TP
.B source_string
input string to parse
.TP
.B itoken
token count should be set to zero for a new string
.TP
.B delimiters
characters used to determine the end of tokens
.SH RETURN
.TP
.B token_start
beginning position in SOURCE_STRING where token was found
.TP
.B token_end
ending position in SOURCE_STRING where token was found
\fIstrtok_status\fP
.SH EXAMPLES
Sample program:
.PP
.nf
.fam C
    program demo_strtok
    use M_strings, only : strtok
    implicit none
    character(len=264)          :: inline
    character(len=*),parameter  :: delimiters=' ;,'
    integer                     :: ios, itoken, istart, iend
       do ! read lines from stdin until end-of-file or error
          read (unit=*,fmt="(a)",iostat=ios) inline
          if(ios.ne.0)stop
          ! must set ITOKEN=0 before looping on strtok(3f)
          ! on a new string.
          itoken=0
          do while &
          &( strtok(inline,itoken,istart,iend,delimiters) )
             print *, itoken,&
             & 'TOKEN=['//(inline(istart:iend))//']',istart,iend
          enddo
       enddo
    end program demo_strtok

    sample input file

.nf
.fam C
     this is a test of strtok; A:B :;,C;;

.fam T
.fi
.RS
sample output file
.TP
.B 1
TOKEN=[this]    2   5
.TP
.B 2
TOKEN=[is]      7   8
.TP
.B 3
TOKEN=[a]       10  10
.TP
.B 4
TOKEN=[test]    12  15
.TP
.B 5
TOKEN=[of]      17  18
.TP
.B 6
TOKEN=[strtok]  20  25
.TP
.B 7
TOKEN=[A:B]     28  30
.TP
.B 8
TOKEN=[:]       32  32
.TP
.B 9
TOKEN=[C]       35  35
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
