." Text automatically generated by txt2man
.TH "fmt" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBfmt\fP(3f) - [M_strings:TOKENS] break a long line into a paragraph
(LICENSE:PD)

.SH SYNOPSIS
function \fBfmt\fP(source_string,length)
.PP
.nf
.fam C
   character(len=*),intent(in)       :: source_string
   integer,intent(in)                :: length
   character(allocatable(len=length)    :: fmt(:)

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBfmt\fP(3f) breaks a long line into a simple paragraph of specified
line length.
.PP
Given a long string break it on spaces into an array such that no
variable is longer than the specified length. Individual words longer
than LENGTH will be placed in variables by themselves.
.SH OPTIONS
.TP
.B SOURCE_STRING
input string to break into an array of shorter strings
on blank delimiters
.TP
.B LENGTH
length of lines to break the string into.
.SH RETURNS
.TP
.B FMT
character array filled with data from source_string broken at
spaces into variables of length LENGTH.
.SH EXAMPLE
sample program
.PP
.nf
.fam C
   program demo_fmt
   use M_strings, only : fmt
   implicit none
   character(len=:),allocatable :: paragraph(:)
   character(len=*),parameter    :: string= '&
    &one two three four five &
    &six seven eight &
    &nine ten eleven twelve &
    &thirteen fourteen fifteen sixteen &
    &seventeen'

   write(*,*)'LEN=',len(string)
   write(*,*)'INPUT:'
   write(*,*)string

   paragraph=fmt(string,40)
   write(*,*)'LEN=',len(paragraph),' SIZE=',size(paragraph)
   write(*,*)'OUTPUT:'
   write(*,'(a)')paragraph

   write(*,'(a)')fmt(string,0)
   write(*,'(3x,a)')fmt(string,47)

   end program demo_fmt

.fam T
.fi
Results:
.RE
.PP

.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
