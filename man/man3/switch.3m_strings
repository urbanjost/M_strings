." Text automatically generated by txt2man
.TH "switch" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME

\fBswitch\fP(3f) - [M_strings:ARRAY] converts between CHARACTER scalar and
array of single characters
(LICENSE:PD)

.SH SYNOPSIS
pure function \fBswitch\fP(\fIarray\fP) result (\fIstring\fP)
.PP
.nf
.fam C
    character(len=1),intent(in) :: array(:)
    character(len=SIZE(array))  :: string

.nf
.fam C
     or

.fam T
.fi
pure function \fBswitch\fP(\fIstring\fP) result (\fIarray\fP)
.PP
.nf
.fam C
    character(len=1),intent(in) :: array(:)
    character(len=SIZE(array))  :: string

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBSWITCH\fP(3f): generic function that switches CHARACTER \fIstring\fP to an \fIarray\fP
of single characters or an \fIarray\fP of single characters to a CHARACTER
\fIstring\fP. Useful in passing strings to C. New Fortran features may
supersede these routines.
.SH EXAMPLES
Sample program:
.PP
.nf
.fam C
   program demo_switch
   use M_strings, only : switch, isalpha, islower, nospace
   character(len=*),parameter :: &
   & dashes='-----------------------------------'
   character(len=*),parameter :: string='This is a string'
   character(len=1024)        :: line

   ! First, examples of standard Fortran features
   ! returns array [F,T,T,T,T,T]
   write(*,*)['A','=','=','=','=','='].eq.'='
   ! this would return T
   write(*,*)all(['=','=','=','=','=','='].eq.'=')
   ! this would return F
   write(*,*)all(['A','=','=','=','=','='].eq.'=')

   ! so to test if the string DASHES is all dashes
   ! using SWITCH(3f) is
   if(all(switch(dashes).eq.'-'))then
      write(*,*)'DASHES is all dashes'
   endif

   ! so to test is a string is all letters
   ! isalpha(3f) returns .true. only if character is a letter
   ! false because dashes are not a letter
   write(*,*) all(isalpha(switch(dashes)))
   ! false because of spaces
   write(*,*) all(isalpha(switch(string)))
   ! true because removed whitespace
   write(*,*) all(isalpha(switch(nospace(string))))

   ! to see if a string is all uppercase
   ! show the string
   write(*,*) string
   ! converted to character array
   write(*,'(1x,*("[",a,"]":))') switch(string)
   write(*,'(*(l3))') islower(switch(string))

   ! we need a string that is all letters
   line=nospace(string)
   write(*,*)'LINE=',trim(line)
   ! all true except first character
   write(*,*) islower(switch(nospace(string)))
   ! should be false
   write(*,*) all(islower(switch(nospace(string))))
   ! should be true
   write(*,*) all(islower(switch(nospace(string(2:)))))

   end program demo_switch

.fam T
.fi
Expected output
.SS    F T T T T T
.SS    T
.SS    F
DASHES is all dashes
.SS    F
.SS    F
.SS    T
This is a \fIstring\fP
[T][h][i][s][ ][i][s][ ][a][ ][s][t][r][i][n][g]
.SS     F  T  T  T  F  T  T  F  T  F  T  T  T  T  T  T
LINE=Thisisastring
.SS    F T T T T T T T T T T T T
.SS    F
.SS    T

.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
