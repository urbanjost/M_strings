." Text automatically generated by txt2man
.TH "quote" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBquote\fP(3f) - [M_strings:QUOTES] add quotes to string as if written
with list-directed input
(LICENSE:PD)

.SH SYNOPSIS
function \fBquote\fP(str,mode,clip) result (\fIquoted_str\fP)
.PP
.nf
.fam C
   character(len=*),intent(in)          :: str
   character(len=*),optional,intent(in) :: mode
   logical,optional,intent(in)          :: clip
   character(len=:),allocatable         :: quoted_str

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Add quotes to a CHARACTER variable as if it was written using
list-directed input. This is particularly useful for processing
strings to add to CSV files.
.SH OPTIONS
.TP
.B str
input string to add quotes to, using the rules of
list-directed input (single quotes are replaced by two
adjacent quotes)
.TP
.B mode
alternate quoting methods are supported:
.PP
.nf
.fam C
            DOUBLE   default. replace quote with double quotes
            ESCAPE   replace quotes with backslash-quote instead of
                     double quotes

.fam T
.fi
.TP
.B clip
default is to trim leading and trailing spaces from the
string. If CLIP is .FALSE. spaces are not trimmed
.SH RESULT
.TP
.B \fIquoted_str\fP
The output string, which is based on adding quotes to STR.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_quote
   use M_strings, only : quote
   implicit none
   character(len=:),allocatable :: str
   character(len=1024)          :: msg
   integer                      :: ios
   character(len=80)            :: inline
      do
         write(*,'(a)',advance='no')'Enter test string:'
         read(*,'(a)',iostat=ios,iomsg=msg)inline
         if(ios.ne.0)then
            write(*,*)trim(inline)
            exit
         endif

         ! the original string
         write(*,'(a)')'ORIGINAL     ['//trim(inline)//']'

         ! the string processed by quote(3f)
         str=quote(inline)
         write(*,'(a)')'QUOTED     ['//str//']'

         ! write the string list-directed to compare the results
         write(*,'(a)',iostat=ios,iomsg=msg) 'LIST DIRECTED:'
         write(*,*,iostat=ios,iomsg=msg,delim='none') inline
         write(*,*,iostat=ios,iomsg=msg,delim='quote') inline
         write(*,*,iostat=ios,iomsg=msg,delim='apostrophe') inline
      enddo
   end program demo_quote

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
