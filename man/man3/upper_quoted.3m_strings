." Text automatically generated by txt2man
.TH "upper_quoted" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBupper_quoted\fP(3f) - [M_strings:CASE] elemental function converts string to miniscule skipping strings quoted per Fortran syntax rules
(LICENSE:PD)

.SH SYNOPSIS
elemental pure function \fBupper_quoted\fP(\fIstr\fP) result (\fIstring\fP)
.PP
.nf
.fam C
    character(*), intent(in)    :: str
    character(len(str))         :: string  ! output string

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBupper_quoted\fP(\fIstring\fP) returns a copy of the input \fIstring\fP with all not-quoted
characters converted to uppercase, assuming ASCII character sets
are being used. The quoting rules are the same as for Fortran source.
Either a single or double quote starts a quoted \fIstring\fP, and a quote
character of the same type is doubled when it appears internally in
the quoted \fIstring\fP. If a double quote quotes the \fIstring\fP single quotes
may appear in the quoted \fIstring\fP as single characters, and vice-versa
for single quotes.
.SH OPTIONS
.TP
.B \fIstr\fP
\fIstring\fP to convert to uppercase
.SH RESULTS
.TP
.B upper
copy of the input \fIstring\fP with all unquoted characters converted
to uppercase
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_upper_quoted
    use M_strings, only: upper_quoted
    implicit none
    character(len=:),allocatable  :: s
    s=' ABCDEFG abcdefg "Double-Quoted" ''Single-Quoted'' "with ""&
       & Quote" everything else'
       write(*,*) 'mixed-case input string is \.\.\..',s
       write(*,*) 'upper-case output string is \.\.\.',upper_quoted(s)
       write(*,'(1x,a,*(a:,"+"))') 'upper_quoted(3f) is elemental ==>', &
       & upper_quoted(["abc","def","ghi"])
    end program demo_upper_quoted

.fam T
.fi
Expected output:
.PP
.nf
.fam C
    mixed-case input string is \.\.\.. ABCDEFG abcdefg "Double-Quoted"
    'Single-Quoted' "with "" Quote" everything else
    upper-case output string is \.\.\. ABCDEFG ABCDEFG "Double-Quoted"
    'Single-Quoted' "with "" Quote" EVERYTHING ELSE
    upper_quoted(3f) is elemental ==>ABC+DEF+GHI

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
