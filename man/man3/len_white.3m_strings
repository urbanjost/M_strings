." Text automatically generated by txt2man
.TH "len_white" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBlen_white\fP(3f) - [M_strings:LENGTH] get length of string trimmed
of whitespace.
(LICENSE:PD)

.SH SYNOPSIS
integer function \fBlen_white\fP(\fIstring\fP)
.PP
.nf
.fam C
    character(len=*) :: string

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBlen_white\fP(3f) returns the position of the last character in
\fIstring\fP that is not a whitespace character. The Fortran90 intrinsic
\fBLEN_TRIM\fP() should be used when trailing whitespace can be assumed
to always be spaces.
.PP
This procedure was heavily used in the past because ANSI FORTRAN
77 character objects are fixed length and blank padded and the
\fBLEN_TRIM\fP() intrinsic did not exist. It should now be used only when
whitespace characters other than blanks are likely.
.SH OPTIONS
.TP
.B \fIstring\fP
input \fIstring\fP whose trimmed length is being calculated
ignoring all trailing whitespace characters.
.SH RETURNS
.TP
.B len_white
the number of characters in the trimmed \fIstring\fP
.SH EXAMPLE
Sample Program:
.PP
.nf
.fam C
   program demo_len_white

.nf
.fam C
     use M_strings, only : len_white
     implicit none
     character(len=80) ::  s
     integer           :: lgth, lastnb
     intrinsic len

     s=' ABCDEFG abcdefg '
     lgth = len(s)
     lastnb = len_white(s)

     write(*,*) 'total length of variable is ',lgth
     write(*,*) 'trimmed length of variable is ',lastnb
     write(*,*) 'trimmed string=[',s(:lastnb),']'

.fam T
.fi
.RS
end program demo_len_white
.SH NOTES

.IP \(bu 3
len_white
.PP
.nf
.fam C
     is a resource-intensive routine. Once the end of
     the string is found, it is probably best to keep track of it in
     order to avoid repeated calls to len_white. Because they
     might be more efficient, consider looking for vendor-supplied or
     system-optimized equivalents. For example:

        o lnblnk - Solaris f77
        o len_trim - FORTRAN 90

.fam T
.fi
.IP \(bu 3
Some compilers seem to have trouble passing a \fIstring\fP of variable
length properly. To be safe, use something like this:
.PP
.nf
.fam C
      subroutine message(s)
       character(len=*) :: s ! s is of variable length
          lgth=len(s)        ! get total length of variable
          ! explicitly specify a substring instead of just variable name
          lastnb = len_white(s(:lgth))
          write(*,*)'error:[',s(:lastnb),']'
      end subroutine messages

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
