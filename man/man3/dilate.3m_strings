." Text automatically generated by txt2man
.TH "dilate" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBdilate\fP(3f) - [M_strings:NONALPHA] expand tab characters
(LICENSE:PD)

.SH SYNOPSIS
function \fBdilate\fP(\fIINSTR\fP) \fBresult\fP(\fIOUTSTR\fP)
.PP
.nf
.fam C
    character(len=*),intent=(in)  :: INSTR
    character(len=:),allocatable  :: OUTSTR

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
.TP
.B \fBdilate\fP() converts tabs in \fIINSTR\fP to spaces in \fIOUTSTR\fP.
It assumes a
tab is set every 8 characters. Trailing spaces are removed.
.PP
In addition, trailing carriage returns and line feeds are removed
(they are usually a problem created by going to and from MSWindows).
.SH OPTIONS
.TP
.B instr
Input line to remove tabs from
.SH RESULTS
.TP
.B outstr
Output string with tabs expanded.
.SH EXAMPLES
Sample program:
.PP
.nf
.fam C
   program demo_dilate

   !  test filter to remove tabs and trailing white space from input
   !  on files up to 1024 characters wide
   use M_strings, only : dilate
   implicit none
   character(len=:),allocatable :: in
   integer                      :: i
      in='  this is my string  '
      ! change spaces to tabs to make a sample input
      do i=1,len(in)
         if(in(i:i).eq.' ')in(i:i)=char(9)
      enddo
      write(*,'(a)')in,dilate(in)
   end program demo_dilate

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
