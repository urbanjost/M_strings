." Text automatically generated by txt2man
.TH "string_to_value" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBstring_to_value\fP(3f) - [M_strings:NUMERIC] subroutine returns numeric
value from string
(LICENSE:PD)

.SH SYNOPSIS
subroutine \fBstring_to_value\fP(chars,valu,ierr)
.PP
.nf
.fam C
    character(len=*),intent(in)              :: chars   ! input string
    integer|real|doubleprecision,intent(out) :: valu
    integer,intent(out)                      :: ierr

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Returns a numeric value from a numeric character string.
.PP
Works with any g-format input, including integer, real, and
exponential. If the input string begins with "B", "Z", or "O"
and otherwise represents a positive whole number it is assumed to
be a binary, hexadecimal, or octal value. If the string contains
commas they are removed. If the string is of the form NN:MMM\.\.\. or
NN#MMM then NN is assumed to be the base of the whole number.
.PP
If an error occurs in the READ, IOSTAT is returned in IERR and
value is set to zero. if no error occurs, IERR=0.
.SH OPTIONS
.TP
.B CHARS
input string to read numeric value from
.SH RETURNS
.TP
.B VALU
numeric value returned. May be INTEGER, REAL, or
DOUBLEPRECISION.
.TP
.B IERR
error flag (0 == no error)
.SH EXAMPLE
Sample Program:
.PP
.nf
.fam C
   program demo_string_to_value
    use M_strings, only: string_to_value
    implicit none
    real :: value
    integer :: ierr
    character(len=80) :: string
       string=' -40.5e-2 '
       call string_to_value(string,value,ierr)
       write(*,*) 'value of string ['//trim(string)//'] is ',value
   end program demo_string_to_value

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
