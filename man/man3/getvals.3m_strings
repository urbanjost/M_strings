." Text automatically generated by txt2man
.TH "getvals" "3m_strings" "September 10, 2021" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBgetvals\fP(3f) - [M_strings:NUMERIC] read arbitrary number of REAL values
from a character variable up to size of \fBVALUES\fP() array
(LICENSE:PD)

.SH SYNOPSIS
subroutine \fBgetvals\fP(line,values,icount,ierr)
.PP
.nf
.fam C
    character(len=*),intent(in)  :: line
    class(*),intent(out)         :: values(:)
    integer,intent(out)          :: icount
    integer,intent(out),optional :: ierr

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBGETVALS\fP(3f) reads a relatively arbitrary number of numeric values from
a character variable into a REAL array using list-directed input.
.PP
NOTE: In this version null values are skipped instead of meaning to leave
that value unchanged
.RS
.PP
1,,,,,,,2 / reads VALUES=[1.0,2.0]
.RE
.PP
Per list-directed rules when reading values, allowed delimiters are
comma, semi-colon and space.
.PP
the slash separator can be used to add inline comments.
.PP
.nf
.fam C
       10.1, 20.43e-1 ; 11 / THIS IS TREATED AS A COMMENT

.fam T
.fi
Repeat syntax can be used up to the size of the output array. These are
equivalent input lines:
.PP
.nf
.fam C
       4*10.0
       10.0, 10.0, 10.0, 10.0

.fam T
.fi
.SH OPTIONS
.TP
.B LINE
A character variable containing the characters representing
a list of numbers
.SH RETURNS
.TP
.B \fBVALUES\fP()
array holding numbers read from string. May be of type
INTEGER, REAL, DOUBLEPRECISION, or CHARACTER. If CHARACTER the
strings are returned as simple words instead of numeric values.
.TP
.B ICOUNT
number of defined numbers in \fBVALUES\fP(). If ICOUNT reaches
the size of the \fBVALUES\fP() array parsing stops.
.TP
.B IERR
zero if no error occurred in reading numbers. Optional.
If not present and an error occurs the program is terminated.
.SH EXAMPLES
Sample program:
.PP
.nf
.fam C
      program demo_getvals
      use M_strings, only: getvals
      implicit none
      integer,parameter  :: longest_line=256
      character(len=longest_line) :: line
      real               :: values(longest_line/2+1)
      integer            :: ios,icount,ierr
      INFINITE: do
         read(*,'(a)',iostat=ios) line
         if(ios.ne.0)exit INFINITE
         call getvals(line,values,icount,ierr)
         write(*,'(4(g0,1x))')'VALUES=',values(:icount)
      enddo INFINITE
      end program demo_getvals

.fam T
.fi
.RE
Sample input lines
.PP
.nf
.fam C
       10,20 30.4
       1 2 3
       1

       3 4*2.5 8
       32.3333 / comment 1
       30e3;300,    30.0, 3
       even 1 like this! 10
       11,,,,22,,,,33

.fam T
.fi
.RS
Expected output:
.PP
.nf
.fam C
    VALUES=   10.0000000       20.0000000       30.3999996
    VALUES=   1.00000000       2.00000000       3.00000000
    VALUES=   1.00000000
    VALUES=
    VALUES=   3.00000000       2.50000000       2.50000000
    2.50000000       2.50000000       8.00000000
    VALUES=   32.3333015
    VALUES=   30000.0000       300.000000       30.0000000
    3.00000000
    *getvals* WARNING:[even] is not a number
    *getvals* WARNING:[like] is not a number
    *getvals* WARNING:[this!] is not a number
    VALUES=   1.00000000       10.0000000
    VALUES=   11.0000000       22.0000000       33.0000000

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
